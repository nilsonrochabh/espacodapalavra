-- MySQL Script generated by MySQL Workbench
-- 07/25/16 10:41:38
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema espacopalavra
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema espacopalavra
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `espacopalavra` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `espacopalavra` ;

-- -----------------------------------------------------
-- Table `espacopalavra`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `espacopalavra`.`usuario` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  `email` VARCHAR(200) NOT NULL,
  `atuacao` VARCHAR(100) NULL,
  `genero` VARCHAR(100) NULL,
  `senha` VARCHAR(250) NULL,
  `descricao_contexto` VARCHAR(250) NULL,
  `data_cadastro` DATETIME NOT NULL,
  `is_admin` TINYINT(1) NOT NULL DEFAULT 0,
  `imagem_profile` VARCHAR(200) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `espacopalavra`.`proposicao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `espacopalavra`.`proposicao` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `id_usuario` INT UNSIGNED NOT NULL,
  `nome` VARCHAR(250) NOT NULL,
  `objetivo` TEXT NOT NULL,
  `start` TEXT NULL,
  `imagem` VARCHAR(200) NULL,
  `tempo_total` TIME NULL,
  `data_cadastro` DATETIME NOT NULL,
  `is_rascunho` TINYINT(1) NOT NULL DEFAULT 1,
  `categoria` ENUM('S', 'J', 'P') NOT NULL,
  `qte_comentarios` INT NOT NULL DEFAULT 0,
  `qte_curtidas` INT NOT NULL DEFAULT 0,
  `qte_seguidores` INT NOT NULL DEFAULT 0,
  `qte_concluidos` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_proposicao_usuario_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_proposicao_usuario`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `espacopalavra`.`usuario` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `espacopalavra`.`habilidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `espacopalavra`.`habilidade` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `espacopalavra`.`ambiente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `espacopalavra`.`ambiente` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `espacopalavra`.`recurso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `espacopalavra`.`recurso` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `espacopalavra`.`tamanho_turma`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `espacopalavra`.`tamanho_turma` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `espacopalavra`.`recurso_proposicao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `espacopalavra`.`recurso_proposicao` (
  `id_recurso` INT UNSIGNED NOT NULL,
  `id_proposicao` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_recurso`, `id_proposicao`),
  INDEX `fk_recurso_has_proposicao_proposicao1_idx` (`id_proposicao` ASC),
  INDEX `fk_recurso_has_proposicao_recurso1_idx` (`id_recurso` ASC),
  CONSTRAINT `fk_recurso_has_proposicao_recurso1`
    FOREIGN KEY (`id_recurso`)
    REFERENCES `espacopalavra`.`recurso` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_recurso_has_proposicao_proposicao1`
    FOREIGN KEY (`id_proposicao`)
    REFERENCES `espacopalavra`.`proposicao` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `espacopalavra`.`tamanho_turma_proposicao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `espacopalavra`.`tamanho_turma_proposicao` (
  `id_tamanho_turma` INT UNSIGNED NOT NULL,
  `id_proposicao` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_tamanho_turma`, `id_proposicao`),
  INDEX `fk_tamanho_turma_proposicao_proposicao1_idx` (`id_proposicao` ASC),
  INDEX `fk_tamanho_turma_proposicao_tamanho_turma1_idx` (`id_tamanho_turma` ASC),
  CONSTRAINT `fk_tamanho_turma_proposicao_tamanho_turma1`
    FOREIGN KEY (`id_tamanho_turma`)
    REFERENCES `espacopalavra`.`tamanho_turma` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_tamanho_turma_proposicao_proposicao1`
    FOREIGN KEY (`id_proposicao`)
    REFERENCES `espacopalavra`.`proposicao` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `espacopalavra`.`habilidade_proposicao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `espacopalavra`.`habilidade_proposicao` (
  `id_habilidade` INT UNSIGNED NOT NULL,
  `id_proposicao` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_habilidade`, `id_proposicao`),
  INDEX `fk_habilidade_proposicao_proposicao1_idx` (`id_proposicao` ASC),
  INDEX `fk_habilidade_proposicao_habilidade1_idx` (`id_habilidade` ASC),
  CONSTRAINT `fk_habilidade_proposicao_habilidade1`
    FOREIGN KEY (`id_habilidade`)
    REFERENCES `espacopalavra`.`habilidade` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_habilidade_proposicao_proposicao1`
    FOREIGN KEY (`id_proposicao`)
    REFERENCES `espacopalavra`.`proposicao` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `espacopalavra`.`ambiente_proposicao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `espacopalavra`.`ambiente_proposicao` (
  `id_ambiente` INT UNSIGNED NOT NULL,
  `id_proposicao` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_ambiente`, `id_proposicao`),
  INDEX `fk_ambiente_proposicao_proposicao1_idx` (`id_proposicao` ASC),
  INDEX `fk_ambiente_proposicao_ambiente1_idx` (`id_ambiente` ASC),
  CONSTRAINT `fk_ambiente_proposicao_ambiente1`
    FOREIGN KEY (`id_ambiente`)
    REFERENCES `espacopalavra`.`ambiente` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ambiente_proposicao_proposicao1`
    FOREIGN KEY (`id_proposicao`)
    REFERENCES `espacopalavra`.`proposicao` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `espacopalavra`.`passo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `espacopalavra`.`passo` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `id_proposicao` INT UNSIGNED NOT NULL,
  `posicao` TINYINT UNSIGNED NOT NULL,
  `titulo` VARCHAR(100) NOT NULL,
  `local` VARCHAR(100) NULL,
  `duracao` TIME NOT NULL,
  `materiais_necessarios` VARCHAR(100) NULL,
  `texto` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_passo_proposicao1_idx` (`id_proposicao` ASC),
  CONSTRAINT `fk_passo_proposicao1`
    FOREIGN KEY (`id_proposicao`)
    REFERENCES `espacopalavra`.`proposicao` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `espacopalavra`.`comentario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `espacopalavra`.`comentario` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `id_usuario` INT UNSIGNED NOT NULL,
  `id_proposicao` INT UNSIGNED NOT NULL,
  `data_cadastro` DATETIME NOT NULL,
  `comentario` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_comentario_usuario1_idx` (`id_usuario` ASC),
  INDEX `fk_comentario_proposicao1_idx` (`id_proposicao` ASC),
  CONSTRAINT `fk_comentario_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `espacopalavra`.`usuario` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_comentario_proposicao1`
    FOREIGN KEY (`id_proposicao`)
    REFERENCES `espacopalavra`.`proposicao` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `espacopalavra`.`curtir`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `espacopalavra`.`curtir` (
  `id_proposicao` INT UNSIGNED NOT NULL,
  `id_usuario` INT UNSIGNED NOT NULL,
  `data_cadastro` DATETIME NOT NULL,
  PRIMARY KEY (`id_proposicao`, `id_usuario`),
  INDEX `fk_curtir_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_curtir_proposicao1`
    FOREIGN KEY (`id_proposicao`)
    REFERENCES `espacopalavra`.`proposicao` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_curtir_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `espacopalavra`.`usuario` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `espacopalavra`.`reset_senha`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `espacopalavra`.`reset_senha` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `id_usuario` INT UNSIGNED NOT NULL,
  `codigo` VARCHAR(255) NOT NULL,
  `data_cadastro` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reset_senha_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_reset_senha_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `espacopalavra`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `espacopalavra`.`seguir`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `espacopalavra`.`seguir` (
  `id_proposicao` INT UNSIGNED NOT NULL,
  `id_usuario` INT UNSIGNED NOT NULL,
  `data_cadastro` DATETIME NOT NULL,
  PRIMARY KEY (`id_proposicao`, `id_usuario`),
  INDEX `fk_seguir_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_seguir_proposicao1`
    FOREIGN KEY (`id_proposicao`)
    REFERENCES `espacopalavra`.`proposicao` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_seguir_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `espacopalavra`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `espacopalavra`.`concluir`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `espacopalavra`.`concluir` (
  `id_proposicao` INT UNSIGNED NOT NULL,
  `id_usuario` INT UNSIGNED NOT NULL,
  `data_cadastro` DATETIME NOT NULL,
  PRIMARY KEY (`id_proposicao`, `id_usuario`),
  INDEX `fk_concluir_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_concluir_proposicao1`
    FOREIGN KEY (`id_proposicao`)
    REFERENCES `espacopalavra`.`proposicao` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_concluir_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `espacopalavra`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `espacopalavra`.`habilidade`
-- -----------------------------------------------------
START TRANSACTION;
USE `espacopalavra`;
INSERT INTO `espacopalavra`.`habilidade` (`id`, `descricao`) VALUES (1, 'Coesão e coerência');
INSERT INTO `espacopalavra`.`habilidade` (`id`, `descricao`) VALUES (2, 'Tempos verbais');
INSERT INTO `espacopalavra`.`habilidade` (`id`, `descricao`) VALUES (3, 'Revisão do texto');
INSERT INTO `espacopalavra`.`habilidade` (`id`, `descricao`) VALUES (4, 'Revisão e edição');
INSERT INTO `espacopalavra`.`habilidade` (`id`, `descricao`) VALUES (5, 'Vocabulário');

COMMIT;


-- -----------------------------------------------------
-- Data for table `espacopalavra`.`ambiente`
-- -----------------------------------------------------
START TRANSACTION;
USE `espacopalavra`;
INSERT INTO `espacopalavra`.`ambiente` (`id`, `descricao`) VALUES (1, 'Espaço aberto');
INSERT INTO `espacopalavra`.`ambiente` (`id`, `descricao`) VALUES (2, 'Sala de aula');

COMMIT;


-- -----------------------------------------------------
-- Data for table `espacopalavra`.`recurso`
-- -----------------------------------------------------
START TRANSACTION;
USE `espacopalavra`;
INSERT INTO `espacopalavra`.`recurso` (`id`, `descricao`) VALUES (1, 'Um computador');
INSERT INTO `espacopalavra`.`recurso` (`id`, `descricao`) VALUES (2, 'Um computador por aluno');
INSERT INTO `espacopalavra`.`recurso` (`id`, `descricao`) VALUES (3, 'Papelaria');
INSERT INTO `espacopalavra`.`recurso` (`id`, `descricao`) VALUES (4, 'Projetor');
INSERT INTO `espacopalavra`.`recurso` (`id`, `descricao`) VALUES (5, 'Celulares com internet');

COMMIT;


-- -----------------------------------------------------
-- Data for table `espacopalavra`.`tamanho_turma`
-- -----------------------------------------------------
START TRANSACTION;
USE `espacopalavra`;
INSERT INTO `espacopalavra`.`tamanho_turma` (`id`, `descricao`) VALUES (1, '-5');
INSERT INTO `espacopalavra`.`tamanho_turma` (`id`, `descricao`) VALUES (2, '-10');
INSERT INTO `espacopalavra`.`tamanho_turma` (`id`, `descricao`) VALUES (3, '-15');
INSERT INTO `espacopalavra`.`tamanho_turma` (`id`, `descricao`) VALUES (4, '-20');
INSERT INTO `espacopalavra`.`tamanho_turma` (`id`, `descricao`) VALUES (5, '-30');
INSERT INTO `espacopalavra`.`tamanho_turma` (`id`, `descricao`) VALUES (6, '+30');

COMMIT;

